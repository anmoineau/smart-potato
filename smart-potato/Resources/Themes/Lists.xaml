<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    
    <!-- Meal Item -->
    <Style TargetType="ListViewItem" x:Key="MealItem">
        <Setter Property="Margin" Value="10,10"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid MinHeight="90">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="0.2*"/>
                            <ColumnDefinition Width="1*"/>
                        </Grid.ColumnDefinitions>
                        <Button x:Name="ItemButton"
                                Grid.Column="0"
                                Grid.ColumnSpan="2"
                                Command="{Binding Path=DataContext.RecipeViewCommand , RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
                                CommandParameter="{Binding Recipe.UID}"
                                Style="{StaticResource ListItemButton}"/>
                        <CheckBox Grid.Column="0"
                                  IsChecked="{Binding IsDone}"
                                  VerticalAlignment="Center"
                                  HorizontalAlignment="Center"
                                  Style="{DynamicResource MenuCheckBox}"/>
                        <TextBlock Grid.Column="1"
                                   Text="{Binding Recipe.Name}"
                                   FontFamily="{StaticResource DefaultFont}"
                                   FontSize="24"
                                   Foreground="{StaticResource ButtonForegroundBrush}"
                                   HorizontalAlignment="Left"
                                   VerticalAlignment="Center"
                                   Margin="30,10"
                                   IsHitTestVisible="False"/>
                        
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Recipe Item -->
    <Style TargetType="ListViewItem" x:Key="RecipeItem">
        <Setter Property="Margin" Value="10,10"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid MinHeight="90">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="0.2*"/>
                            <ColumnDefinition Width="1*"/>
                        </Grid.ColumnDefinitions>
                        <Button x:Name="ItemButton"
                                Grid.Column="0"
                                Grid.ColumnSpan="2"
                                Command="{Binding Path=DataContext.RecipeViewCommand , RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
                                CommandParameter="{Binding UID}"
                                Style="{StaticResource ListItemButton}"/>
                        <TextBlock Grid.Column="0"
                                   Text="{Binding UID}"
                                   FontFamily="{StaticResource DefaultFont}"
                                   FontSize="24"
                                   Foreground="{StaticResource ButtonForegroundBrush}"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center"
                                   IsHitTestVisible="False"/>
                        <TextBlock Grid.Column="1"
                                   Text="{Binding Name}"
                                   FontFamily="{StaticResource DefaultFont}"
                                   FontSize="24"
                                   Foreground="{StaticResource ButtonForegroundBrush}"
                                   HorizontalAlignment="Left"
                                   VerticalAlignment="Center"
                                   Margin="30,10"
                                   IsHitTestVisible="False"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- RecipeBook Item -->
    <Style TargetType="ListViewItem" x:Key="RecipeBookItem">
        <Setter Property="Margin" Value="30,10"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid MinHeight="90">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="0.2*"/>
                            <ColumnDefinition Width="1*"/>
                            <ColumnDefinition Width="0.1*"/>
                            <ColumnDefinition Width="0.2*"/>
                            <ColumnDefinition Width="1*"/>
                        </Grid.ColumnDefinitions>
                        <!-- First Item -->
                        <Button x:Name="Item1Button"
                                Grid.Column="0"
                                Grid.ColumnSpan="2"
                                Command="{Binding Path=DataContext.RecipeViewCommand , RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
                                CommandParameter="{Binding Item1.UID}"
                                Style="{StaticResource ListItemButton}"/>
                        <TextBlock Grid.Column="0"
                                   Text="{Binding Item1.UID}"
                                   FontFamily="{StaticResource DefaultFont}"
                                   FontSize="24"
                                   Foreground="{StaticResource ButtonForegroundBrush}"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center"
                                   IsHitTestVisible="False"/>
                        <TextBlock Grid.Column="1"
                                   Text="{Binding Item1.Name}"
                                   FontFamily="{StaticResource DefaultFont}"
                                   FontSize="24"
                                   Foreground="{StaticResource ButtonForegroundBrush}"
                                   HorizontalAlignment="Left"
                                   VerticalAlignment="Center"
                                   Margin="30,10"
                                   IsHitTestVisible="False"/>
                        <!-- Second Item -->
                        <Button x:Name="Item2Button"
                                Grid.Column="3"
                                Grid.ColumnSpan="2"
                                Command="{Binding Path=DataContext.RecipeViewCommand , RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
                                CommandParameter="{Binding Item2.UID}"
                                Style="{StaticResource ListItemButton}"/>
                        <TextBlock Grid.Column="3"
                                   Text="{Binding Item2.UID}"
                                   FontFamily="{StaticResource DefaultFont}"
                                   FontSize="24"
                                   Foreground="{StaticResource ButtonForegroundBrush}"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center"
                                   IsHitTestVisible="False"/>
                        <TextBlock Grid.Column="4"
                                   Text="{Binding Item2.Name}"
                                   FontFamily="{StaticResource DefaultFont}"
                                   FontSize="24"
                                   Foreground="{StaticResource ButtonForegroundBrush}"
                                   HorizontalAlignment="Left"
                                   VerticalAlignment="Center"
                                   Margin="30,10"
                                   IsHitTestVisible="False"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Item2}" Value="{x:Null}">
                            <Setter TargetName="Item2Button" Property="IsEnabled" Value="False"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        
    </Style>
    
    <!--Scrollbar Thumbs-->
    <Style x:Key="ScrollThumbs" TargetType="{x:Type Thumb}">
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid x:Name="Grid">
                        <Rectangle HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto" Fill="Transparent" />
                        <Border x:Name="Rectangle1" CornerRadius="5" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto" Background="{TemplateBinding Background}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Tag" Value="Horizontal">
                            <Setter TargetName="Rectangle1" Property="Width" Value="Auto" />
                            <Setter TargetName="Rectangle1" Property="Height" Value="7" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--ScrollBars-->
    <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
        <Setter Property="Stylus.IsFlicksEnabled" Value="false" />
        <Setter Property="Foreground" Value="{StaticResource ThumbBrush}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Width" Value="8" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid x:Name="GridRoot" Width="8" Background="{TemplateBinding Background}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="0.00001*" />
                        </Grid.RowDefinitions>
                        <Track x:Name="PART_Track" Grid.Row="0" IsDirectionReversed="true" Focusable="false">
                            <Track.Thumb>
                                <Thumb x:Name="Thumb" Background="{TemplateBinding Foreground}" Style="{DynamicResource ScrollThumbs}" />
                            </Track.Thumb>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton x:Name="PageUp" Command="ScrollBar.PageDownCommand" Opacity="0" Focusable="false" />
                            </Track.IncreaseRepeatButton>
                            <Track.DecreaseRepeatButton>
                                <RepeatButton x:Name="PageDown" Command="ScrollBar.PageUpCommand" Opacity="0" Focusable="false" />
                            </Track.DecreaseRepeatButton>
                        </Track>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger SourceName="Thumb" Property="IsMouseOver" Value="true">
                            <Setter Value="{StaticResource HighlightBrush}" TargetName="Thumb" Property="Background" />
                        </Trigger>
                        <Trigger SourceName="Thumb" Property="IsDragging" Value="true">
                            <Setter Value="{StaticResource ThumbCapturedBrush}" TargetName="Thumb" Property="Background" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Thumb" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="Orientation" Value="Horizontal">
                            <Setter TargetName="GridRoot" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="-90" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="PART_Track" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="-90" />
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Width" Value="Auto" />
                            <Setter Property="Height" Value="8" />
                            <Setter TargetName="Thumb" Property="Tag" Value="Horizontal" />
                            <Setter TargetName="PageDown" Property="Command" Value="ScrollBar.PageLeftCommand" />
                            <Setter TargetName="PageUp" Property="Command" Value="ScrollBar.PageRightCommand" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>